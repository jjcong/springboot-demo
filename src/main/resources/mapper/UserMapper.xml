<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.jincong.springboot.mapper.UserMapper">

    <resultMap id="UserResult" type="com.jincong.springboot.vo.UserVO">
        <id property="id" column="id"/>
        <result property="userCode" column="user_code" jdbcType="VARCHAR"/>
        <result property="userName" column="user_name" jdbcType="VARCHAR"/>
        <result property="phone" column="phone" jdbcType="VARCHAR"/>
        <result property="sex" column="sex" jdbcType="INTEGER"/>
        <result property="password" column="password" jdbcType="VARCHAR"/>
        <result property="createTime" column="create_time" jdbcType="TIMESTAMP"/>
        <result property="lastUpdateTime" column="last_update_time" jdbcType="TIMESTAMP"/>
        <collection property="roleList" ofType="com.jincong.springboot.vo.RoleVO">
            <result property="roleId" column="roleId" jdbcType="INTEGER"/>
            <result property="roleName" column="role_name" jdbcType="VARCHAR"/>
            <!--   此处取从表中的关联字段，不能直接去外层的关联字段         -->
            <result property="userCode" column="userCode1" jdbcType="VARCHAR"/>
            <result property="remark" column="remark" jdbcType="VARCHAR"/>
        </collection>
    </resultMap>


    <resultMap id="RoleResult" type="com.jincong.springboot.vo.RoleVO">
        <id property="id" column="roleId"/>
        <result property="roleId" column="role_id" jdbcType="INTEGER"/>
        <result property="roleName" column="role_name" jdbcType="VARCHAR"/>
        <result property="userCode" column="userCode1" jdbcType="VARCHAR"/>
        <result property="remark" column="remark" jdbcType="VARCHAR"/>
    </resultMap>
    <!-- 查询用户列表 -->
    <select id="findAllUser" resultType="com.jincong.springboot.domain.User">
        select id,
               user_code,
               user_name,
               phone,
               sex,
               password,
               remark,
               create_time,
               last_update_time

        from t_user

    </select>

    <select id="findUserByUserCode" resultMap="UserResult">
        select
        u.id id,
        u.user_code,
        u.user_name,
        u.password,
        u.create_time,
        u.last_update_time,
        r.id roleId,
        <!-- 此处必须重命名userCode，保证不与主表重名，否则当匹配不到角色时，会产生一条只有userCode数据 -->
        r.user_code as userCode1,
        r.role_name
        from
        t_user u
        left join t_role r on u.user_code = r.user_code
        <where>
            u.user_code= #{userCode}
        </where>
    </select>

    <!-- 根据用户名查询用户 -->
    <select id="findUserByUserName" resultType="com.jincong.springboot.domain.User"
            parameterType="java.util.Map">
        select
        *
        from
        t_user u
        <where>
            <if test="userId != null and userId != ''">
                u.user_code LIKE CONCAT('%', #{userId}, '%')
            </if>
            <if test="userName != null and userName != ''">
                and u.user_name LIKE CONCAT('%', #{userName}, '%')
            </if>
        </where>

    </select>
    <select id="findUserByUserNameAndIds" resultType="com.jincong.springboot.domain.User">
        select id,
               user_code,
               user_name,
               phone,
               sex,
               password,
               remark,
               create_time,
               last_update_time
        from t_user u
        <where>
            <if test="userIds != null and userIds.size() != 0">
                u.id in
                <foreach collection="list" item="id" index="index" open="(" separator="," close=")">
                    #{id}
                </foreach>
            </if>
            <if test="userName != null and userName != ''">
                and u.user_name LIKE CONCAT('%', #{userName}, '%')
            </if>
        </where>
    </select>
    <select id="existData" resultType="java.lang.Integer">
        select 1 from t_user limit 10;
    </select>


    <!-- 增加用户 -->
    <insert id="addUser" parameterType="com.jincong.springboot.domain.User">

        INSERT INTO t_user
            (user_code, user_name, password, create_time)
        values (#{userId}, #{userName}, #{password}, #{createTime})
    </insert>

    <!-- 批量删除用户 -->
    <delete id="delBatchUser" parameterType="int">

        DELETE from t_user where id in
        <foreach collection="array" item="id" index="no" open="(" separator="," close=")">
            #{id}
        </foreach>

    </delete>
</mapper>