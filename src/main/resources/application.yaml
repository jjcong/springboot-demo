
server:
  port:8080
spring:
  mvc:
    static-path-pattern: /res/**
  dynamic:
    true

  # 数据库配置
  datasource:
    # connectionTimeout=3000 连接层超时时间
    # socketTimeout=5000 应用层连接超时时间
#     url: jdbc:mysql://1.117.208.226:3306/test?useUnicode=true&characterEncoding=utf-8&allowMultiQueries=true&useSSL=false&serverTimezone=Asia/Shanghai
    url: jdbc:mysql://127.0.0.1:3306/test?useUnicode=true&characterEncoding=utf-8&allowMultiQueries=true&useSSL=false&serverTimezone=Asia/Shanghai
    username: root
    password: Jincong@163.com
    type: com.alibaba.druid.pool.DruidDataSource

  # redis配置
  redis:
    host: 1.117.208.226
    port: 6379
    password: jincong
    timeout: 2000
    jedis:
      pool:
      # 连接池最大的连接数
        max-active: 10
      # 连接池允许最大空闲的连接数
        max-idle: 10
      # 连接池确保最少空闲连接数
        min-idle: 3
        max-wait: 3

  # 消息队列配置
  rabbitmq:
    host: 127.0.0.1
    port: 5672
    username: guest



  # kafka配置
  kafka:
    bootstrap-servers: 1.117.208.226:9092
    consumer:
      group-id: jincong
      #  当新加入的消费者从队列的何处开始消费
      #  earliest-从队列头部开始消费
      #  latest-从队列尾部开始消费
      #  none-抛异常
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.apache.kafka.common.serialization.StringSerializer
      retries: 0

# mybatis配置
mybatis:
#   configuration:
#     log-impl: org.apache.ibatis.logging.stdout.StdOutImpl
  type-aliases-package: com.jincong.springboot.domain
  mapper-locations: classpath:mapper/*.xml
  type-handlers-package: com.jincong.springboot.config


logging:
    level:
      com.jincong.springboot.mapper: DEBUG

# 自定义注解
jc:
  hello:
    prefix: jincong
    suffix: 靳聪


my:
 kafka:
   broker: 1.117.208.226:9092
   topic: TEST-TOPIC
   groupId: jincong1993
   client: bigger
   enable: N


